#!/usr/bin/env python
import sys
import re
import string

fmt = string.Formatter()

print '''C $Header$
C $Name$

C!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C!!!!!!!!!!!!!! AUTOGENERATED FILE -- WILL BE OVERWRITTEN !!!!!!!!!!!!!!
C!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#include "GUD_OPTIONS.h"

CBOP
C     !ROUTINE: GUD_DIAGNOSTICS_INIT
C     !INTERFACE:
      SUBROUTINE GUD_DIAGNOSTICS_INIT( myThid )
C     !DESCRIPTION:
C     Routine to initialize Gud diagnostics

C     !USES:
      IMPLICIT NONE
C     === Global variables ===
#include "SIZE.h"
#include "PTRACERS_SIZE.h"
#include "EEPARAMS.h"
#include "PARAMS.h"
#include "GUD_SIZE.h"
#include "GUD_INDICES.h"

C     !INPUT/OUTPUT PARAMETERS:
C     === Routine arguments ===
C     myThid -  Number of this instance of GUD_DIAGNOSTICS_INIT
      INTEGER myThid
CEOP

#ifdef ALLOW_GUD
#ifdef ALLOW_DIAGNOSTICS

C     !LOCAL VARIABLES:
C     === Local variables ===
C     msgBuf      - Informational/error meesage buffer
c     CHARACTER*(MAX_LEN_MBUF) msgBuf

      INTEGER j
      INTEGER       diagNum
      CHARACTER*8   diagName
      CHARACTER*16  diagCode
      CHARACTER*16  diagUnits
      CHARACTER*(80) diagTitle

C---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

C--   Add diagnostics to the (long) list
'''

curdim = None

for line in sys.stdin:
    line = line.strip()
    if len(line) == 0: break
    name,units,title = string.split(line, maxsplit=2)

    units = re.sub(r'mmol', 'mmol ', units)

    dim = None
    namefmt = []
    namelst = []
    l = fmt.parse(name)
    for s,f,_,_ in l:
        namefmt.append('A')
        namelst.append("'{0}'".format(s))
        if f is not None:
            dim = f
            namefmt.append('I2.2')
            namelst.append("j")
    namefmt = '({0})'.format(','.join(namefmt))
    namelst = ','.join(namelst)

    if dim != curdim:
        if curdim is not None:
            print '\n      ENDDO'
        if dim is not None:
            print '      DO j = 1, {0}'.format(dim)

    print "\n        WRITE(diagName,'{nf}'){nl}".format(nf=namefmt, nl=namelst)

    titlefmt = []
    titlelst = []
    l = fmt.parse(title)
    for s,f,_,_ in l:
        titlefmt.append('A')
        titlelst.append("'{0}'".format(s))
        if f is not None:
            titlefmt.append('I2')
            titlelst.append("j")
    titlefmt = '({0})'.format(','.join(titlefmt))
    title = ""
    line = "        WRITE(diagTitle,'{tf}'){tl}".format(tf=titlefmt,tl=titlelst.pop(0))
    for s in titlelst:
        line += ','
        if len(line) + len(s) > 72:
            title += line + '\n'
            line = '          '
        line += s
    title += line

    print title
    print "        diagUnits = '{u:<16s}'".format(u=units)
    print '''        diagCode  = 'SM P    MR      '
        CALL DIAGNOSTICS_ADDTOLIST( diagNum,
     I             diagName, diagCode, diagUnits, diagTitle, 0, myThid )'''

    curdim = dim

if curdim is not None:
    print '\n      ENDDO'

print '''
#endif /* ALLOW_DIAGNOSTICS */
#endif /* ALLOW_GUD */

      RETURN
      END
'''

