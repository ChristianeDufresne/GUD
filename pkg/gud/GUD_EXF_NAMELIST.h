C This file contains cog templates.
C Code between template and end marker is autogenerated.
C Add new forcing fields to exfflds in defs.py
C
CCOG[[[cog import cog; from defs import *]]]
CCOG[[[end]]] (checksum: d41d8cd98f00b204e9800998ecf8427e)

      NAMELIST/gud_forcing_params/
     &    useGudYearlyFields,
     &    gud_chlInitBalanced,
     &    gud_chlIter0,
#ifdef GUD_ALLOW_RADTRANS
C
     &    OASIM_Edfile,
     &    OASIM_Esfile,
     &    OASIMstartdate1,
     &    OASIMstartdate2,
     &    OASIMperiod,
     &    OASIMconst,
     &    OASIM_exfremo_intercept,
     &    OASIM_exfremo_slope,
     &    OASIMmask,
     &    gud_inscal_OASIM,
#endif
CCOG[[[cog
CCOGcog.out(',\n'.join('''
CCOGC
CCOG     &    {pre}file,
CCOG     &    {pre}startdate1,
CCOG     &    {pre}startdate2,
CCOG     &    {pre}period,
CCOG     &    {pre}const,
CCOG     &    {pre}_exfremo_intercept,
CCOG     &    {pre}_exfremo_slope,
CCOG     &    {pre}mask,
CCOG     &    gud_inscal_{pre}
CCOG'''.format(pre=pre, fld=fld)[1:-1] for fld,pre in exfflds))
CCOG]]]
C
     &    PARfile,
     &    PARstartdate1,
     &    PARstartdate2,
     &    PARperiod,
     &    PARconst,
     &    PAR_exfremo_intercept,
     &    PAR_exfremo_slope,
     &    PARmask,
     &    gud_inscal_PAR,
C
     &    ironfile,
     &    ironstartdate1,
     &    ironstartdate2,
     &    ironperiod,
     &    ironconst,
     &    iron_exfremo_intercept,
     &    iron_exfremo_slope,
     &    ironmask,
     &    gud_inscal_iron,
C
     &    icefile,
     &    icestartdate1,
     &    icestartdate2,
     &    iceperiod,
     &    iceconst,
     &    ice_exfremo_intercept,
     &    ice_exfremo_slope,
     &    icemask,
     &    gud_inscal_ice,
C
     &    windfile,
     &    windstartdate1,
     &    windstartdate2,
     &    windperiod,
     &    windconst,
     &    wind_exfremo_intercept,
     &    wind_exfremo_slope,
     &    windmask,
     &    gud_inscal_wind,
C
     &    pCO2file,
     &    pCO2startdate1,
     &    pCO2startdate2,
     &    pCO2period,
     &    pCO2const,
     &    pCO2_exfremo_intercept,
     &    pCO2_exfremo_slope,
     &    pCO2mask,
     &    gud_inscal_pCO2
CCOG[[[end]]] (checksum: 80a36060af3084be8e3f041d6aeef830)

#ifdef USE_EXF_INTERPOLATION
      NAMELIST/gud_interp_params/
#ifdef GUD_ALLOW_RADTRANS
C
     &    OASIM_lon0,
     &    OASIM_lat0,
     &    OASIM_nlon,
     &    OASIM_nlat,
     &    OASIM_lon_inc,
     &    OASIM_interpMethod,
     &    OASIM_lat_inc,
#endif
CCOG[[[cog
CCOGcog.out(',\n'.join('''
CCOGC
CCOG     &    {pre}_lon0,
CCOG     &    {pre}_lat0,
CCOG     &    {pre}_nlon,
CCOG     &    {pre}_nlat,
CCOG     &    {pre}_lon_inc,
CCOG     &    {pre}_interpMethod,
CCOG     &    {pre}_lat_inc
CCOG'''.format(pre=pre, fld=fld)[1:-1] for fld,pre in exfflds))
CCOG]]]
C
     &    PAR_lon0,
     &    PAR_lat0,
     &    PAR_nlon,
     &    PAR_nlat,
     &    PAR_lon_inc,
     &    PAR_interpMethod,
     &    PAR_lat_inc,
C
     &    iron_lon0,
     &    iron_lat0,
     &    iron_nlon,
     &    iron_nlat,
     &    iron_lon_inc,
     &    iron_interpMethod,
     &    iron_lat_inc,
C
     &    ice_lon0,
     &    ice_lat0,
     &    ice_nlon,
     &    ice_nlat,
     &    ice_lon_inc,
     &    ice_interpMethod,
     &    ice_lat_inc,
C
     &    wind_lon0,
     &    wind_lat0,
     &    wind_nlon,
     &    wind_nlat,
     &    wind_lon_inc,
     &    wind_interpMethod,
     &    wind_lat_inc,
C
     &    pCO2_lon0,
     &    pCO2_lat0,
     &    pCO2_nlon,
     &    pCO2_nlat,
     &    pCO2_lon_inc,
     &    pCO2_interpMethod,
     &    pCO2_lat_inc
CCOG[[[end]]] (checksum: 5dce0ae680576db7c730223e134dd2fd)
#endif

