C $Header$
C $Name$

{{ EDIT_THIS_FILE }}

#include "GUD_OPTIONS.h"
#include "EXF_OPTIONS.h"

C---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
CBOP
C     !ROUTINE: GUD_EXF_INIT_VARIA

C     !INTERFACE:
      SUBROUTINE GUD_EXF_INIT_VARIA( myThid )

C     !DESCRIPTION:
C     Initialize GUD constants

C     !USES:
      IMPLICIT NONE
#include "EEPARAMS.h"
#include "SIZE.h"
#include "GRID.h"
#include "PARAMS.h"
#ifdef ALLOW_EXF
#include "EXF_PARAM.h"
#endif
#ifdef ALLOW_GUD
#include "GUD_SIZE.h"
#include "GUD_EXF.h"
#endif

C     !INPUT PARAMETERS:
      INTEGER myThid
CEOP

#ifdef ALLOW_GUD
#ifdef ALLOW_EXF

#ifdef ALLOW_RADTRANS
      INTEGER l
#endif

C     these load constant forcing fields

#ifdef ALLOW_RADTRANS
      DO l = 1, nlam
       call exf_init_gen (
     &     OASIM_Edfile(l), OASIMperiod, gud_inscal_OASIM(l),
     &     OASIMmask, OASIMconst,
     &     OASIM_Ed(1-OLx,1-OLy,1,1,l),
     &     OASIM_Ed0(1-OLx,1-OLy,1,1,l),
     &     OASIM_Ed1(1-OLx,1-OLy,1,1,l),
#ifdef USE_EXF_INTERPOLATION
     &     OASIM_lon0, OASIM_lon_inc,
     &     OASIM_lat0, OASIM_lat_inc,
     &     OASIM_nlon, OASIM_nlat, xC, yC, OASIM_interpMethod,
#endif
     &     mythid )

       call exf_init_gen (
     &     OASIM_Esfile(l), OASIMperiod, gud_inscal_OASIM(l),
     &     OASIMmask, OASIMconst,
     &     OASIM_Es(1-OLx,1-OLy,1,1,l),
     &     OASIM_Es0(1-OLx,1-OLy,1,1,l),
     &     OASIM_Es1(1-OLx,1-OLy,1,1,l),
#ifdef USE_EXF_INTERPOLATION
     &     OASIM_lon0, OASIM_lon_inc,
     &     OASIM_lat0, OASIM_lat_inc,
     &     OASIM_nlon, OASIM_nlat, xC, yC, OASIM_interpMethod,
#endif
     &     mythid )
      ENDDO
#endif
{% for fld,pre in flds %}
      call exf_init_gen (
     &     {{pre}}file, {{pre}}period, gud_inscal_{{pre}}, {{pre}}mask,
     &     {{pre}}const, {{fld}}, {{pre}}0, {{pre}}1,
#ifdef USE_EXF_INTERPOLATION
     &     {{pre}}_lon0, {{pre}}_lon_inc,
     &     {{pre}}_lat0, {{pre}}_lat_inc,
     &     {{pre}}_nlon, {{pre}}_nlat, xC, yC, {{pre}}_interpMethod,
#endif
     &     mythid )
{% end %}
      IF (gud_loadFieldsEarly) THEN
C       these load time-varying forcing fields
C       (usually done in gud_fields_load, but may be needed for chl)
#ifdef ALLOW_RADTRANS
       DO l = 1, nlam
        call exf_set_gen(
     &     OASIM_Edfile(l), OASIMstartdate, OASIMperiod,
     &     gud_inscal_OASIM(l),
     &     OASIM_exfremo_intercept, OASIM_exfremo_slope,
     &     OASIM_Ed(1-OLx,1-OLy,1,1,l),
     &     OASIM_Ed0(1-OLx,1-OLy,1,1,l),
     &     OASIM_Ed1(1-OLx,1-OLy,1,1,l),
     &     OASIMmask,
#ifdef USE_EXF_INTERPOLATION
     &     OASIM_lon0, OASIM_lon_inc,
     &     OASIM_lat0, OASIM_lat_inc,
     &     OASIM_nlon, OASIM_nlat, xC, yC, OASIM_interpMethod,
#endif
     &     starttime, nIter0, mythid )

        call exf_set_gen(
     &     OASIM_Esfile(l), OASIMstartdate, OASIMperiod,
     &     gud_inscal_OASIM(l),
     &     OASIM_exfremo_intercept, OASIM_exfremo_slope,
     &     OASIM_Es(1-OLx,1-OLy,1,1,l),
     &     OASIM_Es0(1-OLx,1-OLy,1,1,l),
     &     OASIM_Es1(1-OLx,1-OLy,1,1,l),
     &     OASIMmask,
#ifdef USE_EXF_INTERPOLATION
     &     OASIM_lon0, OASIM_lon_inc,
     &     OASIM_lat0, OASIM_lat_inc,
     &     OASIM_nlon, OASIM_nlat, xC, yC, OASIM_interpMethod,
#endif
     &     starttime, nIter0, mythid )
       ENDDO
#endif
{% for i,(fld,pre) in enumerate(flds) %}
        call exf_set_gen(
     &     {{pre}}file, {{pre}}startdate, {{pre}}period,
     &     gud_inscal_{{pre}},
     &     {{pre}}_exfremo_intercept, {{pre}}_exfremo_slope,
     &     {{fld}}, {{pre}}0, {{pre}}1, {{pre}}mask,
#ifdef USE_EXF_INTERPOLATION
     &     {{pre}}_lon0, {{pre}}_lon_inc,
     &     {{pre}}_lat0, {{pre}}_lat_inc,
     &     {{pre}}_nlon, {{pre}}_nlat, xC, yC, {{pre}}_interpMethod,
#endif
     &     starttime, nIter0, mythid ){{ '\n' if i<len(flds)-1 else '' }}{% end %}
      ENDIF

#endif /* ALLOW_EXF */
#endif /* ALLOW_GUD */

      RETURN
      END
