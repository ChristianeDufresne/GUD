C $Header$
C $Name$

{{ EDIT_THIS_FILE }}

#ifdef ALLOW_GUD

CBOP
C     !ROUTINE: GUD_EXF.h
C     !INTERFACE:
C #include GUD_EXF.h

C     !DESCRIPTION:
C Contains fields for gud package read through exf
C
C Requires: SIZE.h
C Requires: EXF_PARAM.h
C Requires: GUD_SIZE.h

      COMMON/gud_forcing_params_l/
     &    usegudYearlyFields,
     &    gud_chlInitBalanced,
     &    gud_loadFieldsEarly

      LOGICAL usegudYearlyFields
      LOGICAL gud_chlInitBalanced
      LOGICAL gud_loadFieldsEarly

      COMMON/gud_forcing_params_i/
     &    gud_chlIter0

      INTEGER gud_chlIter0

      COMMON /gud_fields_r/
#ifdef ALLOW_RADTRANS
     &    OASIM_Ed0, OASIM_Ed1, OASIM_Ed,
     &    OASIM_Es0, OASIM_Es1, OASIM_Es,
#endif
{% for i,(fld,pre) in enumerate(flds) %}     &    {{pre}}0, {{pre}}1, {{fld}}{{ ',\n' if i<len(flds)-1 else '' }}{% end %}

#ifdef ALLOW_RADTRANS
      _RL OASIM_Ed0(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy,nlam)
      _RL OASIM_Ed1(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy,nlam)
      _RL OASIM_Ed(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy,nlam)

      _RL OASIM_Es0(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy,nlam)
      _RL OASIM_Es1(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy,nlam)
      _RL OASIM_Es(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy,nlam)
#endif
{% for fld,pre in flds %}
      _RL {{pre}}0(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy)
      _RL {{pre}}1(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy)
      _RL {{fld}}(1-OLx:sNx+OLx,1-OLy:sNy+OLy,nSx,nSy)
{% end %}

#ifdef ALLOW_RADTRANS
C OASIM forcing parameters for exf

      _RL OASIMstartdate

      COMMON/gud_forcing_OASIM_c/
     &    OASIMmask, OASIM_EdFile, OASIM_EsFile
      COMMON/gud_forcing_OASIM_i/
     &    OASIMstartdate1, OASIMstartdate2
      COMMON/gud_forcing_OASIM_r/
     &    OASIMstartdate,
     &    OASIMperiod, OASIMconst,
     &    OASIM_exfremo_intercept, OASIM_exfremo_slope,
     &    gud_inscal_OASIM
      CHARACTER*128  OASIM_EdFile(nlam)
      CHARACTER*128  OASIM_EsFile(nlam)
      CHARACTER*1 OASIMmask
      INTEGER OASIMstartdate1
      INTEGER OASIMstartdate2
      _RL OASIMperiod
      _RL OASIMconst
      _RL OASIM_exfremo_intercept
      _RL OASIM_exfremo_slope
      _RL gud_inscal_OASIM(nlam)

#ifdef USE_EXF_INTERPOLATION
      COMMON/gud_interp_OASIM_i/
     &    OASIM_nlon, OASIM_nlat, OASIM_interpMethod
      COMMON/gud_interp_OASIM_r/
     &    OASIM_lon0, OASIM_lat0, OASIM_lon_inc, OASIM_lat_inc
      INTEGER OASIM_interpMethod, OASIM_nlon, OASIM_nlat
      _RL  OASIM_lon0
      _RL  OASIM_lat0
      _RL  OASIM_lon_inc
      _RL  OASIM_lat_inc(MAX_LAT_INC)
#endif
#endif
{% for fld,pre in flds %}
C {{pre}} forcing parameters for exf

      _RL {{pre}}startdate

      COMMON/gud_forcing_{{pre}}_c/
     &    {{pre}}mask, {{pre}}file
      COMMON/gud_forcing_{{pre}}_i/
     &    {{pre}}startdate1, {{pre}}startdate2
      COMMON/gud_forcing_{{pre}}_r/
     &    {{pre}}startdate,
     &    {{pre}}period, {{pre}}const,
     &    {{pre}}_exfremo_intercept, {{pre}}_exfremo_slope,
     &    gud_inscal_{{pre}}
      CHARACTER*128  {{pre}}file
      CHARACTER*1 {{pre}}mask
      INTEGER {{pre}}startdate1
      INTEGER {{pre}}startdate2
      _RL {{pre}}period
      _RL {{pre}}const
      _RL {{pre}}_exfremo_intercept
      _RL {{pre}}_exfremo_slope
      _RL gud_inscal_{{pre}}

#ifdef USE_EXF_INTERPOLATION
      COMMON/gud_interp_{{pre}}_i/
     &    {{pre}}_nlon, {{pre}}_nlat, {{pre}}_interpMethod
      COMMON/gud_interp_{{pre}}_r/
     &    {{pre}}_lon0, {{pre}}_lat0, {{pre}}_lon_inc, {{pre}}_lat_inc
      INTEGER {{pre}}_interpMethod, {{pre}}_nlon, {{pre}}_nlat
      _RL  {{pre}}_lon0
      _RL  {{pre}}_lat0
      _RL  {{pre}}_lon_inc
      _RL  {{pre}}_lat_inc(MAX_LAT_INC)
#endif
{% end %}
CEOP

#endif /* ALLOW_GUD */
